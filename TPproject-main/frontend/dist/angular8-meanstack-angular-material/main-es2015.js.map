{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/components/add-student/add-student.component.html","webpack:///./src/app/components/edit-student/edit-student.component.html","webpack:///./src/app/components/students-list/students-list.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-student/add-student.component.css","webpack:///./src/app/components/add-student/add-student.component.ts","webpack:///./src/app/components/edit-student/edit-student.component.css","webpack:///./src/app/components/edit-student/edit-student.component.ts","webpack:///./src/app/components/students-list/students-list.component.css","webpack:///./src/app/components/students-list/students-list.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<!-- Toolbar -->\\n<mat-toolbar color=\\\"primary\\\" class=\\\"header\\\">\\n  <div>Student Records</div>\\n  <span class=\\\"nav-tool-items\\\">\\n    <mat-icon (click)=\\\"sidenav.toggle()\\\" class=\\\"hamburger\\\">menu</mat-icon>\\n  </span>\\n</mat-toolbar>\\n\\n<mat-sidenav-container>\\n  <!-- Sidenav -->\\n  <mat-sidenav #sidenav [mode]=\\\"isBiggerScreen() ? 'over' : 'side'\\\" [(opened)]=\\\"opened\\\" [fixedInViewport]=\\\"true\\\"\\n    [fixedTopGap]>\\n    <mat-nav-list>\\n      <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/add-student\\\">\\n        <mat-icon>add</mat-icon> Add Student\\n      </a>\\n      <a mat-list-item routerLinkActive=\\\"active\\\" routerLink=\\\"/students-list\\\">\\n        <mat-icon>format_list_bulleted</mat-icon> View Students\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n\\n  <!-- Main content -->\\n  <mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \"<!-- Title group  -->\\n<div class=\\\"title-group\\\">\\n  <h1 class=\\\"mat-h1\\\">Add Student</h1>\\n  <mat-divider fxFlex=\\\"1 0\\\"></mat-divider>\\n</div>\\n\\n<!-- Form -->\\n<div class=\\\"inner-wrapper\\\">\\n  <form [formGroup]=\\\"studentForm\\\" (ngSubmit)=\\\"submitStudentForm()\\\" #resetStudentForm=\\\"ngForm\\\" novalidate>\\n    <!-- Left block -->\\n    <mat-card>\\n      <div class=\\\"controlers-wrapper\\\">\\n        <!-- Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Student name\\\" formControlName=\\\"student_name\\\">\\n          <mat-error *ngIf=\\\"handleError('student_name', 'required')\\\">\\n            You must provide a<strong>student name</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Email -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Student email\\\" formControlName=\\\"student_email\\\">\\n          <mat-error *ngIf=\\\"handleError('student_email', 'required')\\\">\\n            You must provide a<strong>student email</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Section -->\\n        <mat-form-field>\\n          <mat-label>Section</mat-label>\\n          <mat-select [(value)]=\\\"selected\\\" formControlName=\\\"section\\\">\\n            <mat-option [value]=\\\"sectioinArray\\\" *ngFor=\\\"let sectioinArray of SectioinArray\\\">{{sectioinArray}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"handleError('section', 'required')\\\">\\n            Section is required\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n    </mat-card>\\n\\n    <!-- Right block -->\\n    <mat-card>\\n      <div class=\\\"controlers-wrapper\\\">\\n        <!-- Add subjects -->\\n        <mat-form-field class=\\\"multiple-items\\\">\\n          <mat-chip-list #chipList>\\n            <mat-chip *ngFor=\\\"let subjectArray of subjectArray\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\n              (removed)=\\\"remove(subjectArray)\\\">\\n              {{subjectArray.name}}\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n            </mat-chip>\\n            <input placeholder=\\\"Add subject\\\" [matChipInputFor]=\\\"chipList\\\"\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n              (matChipInputTokenEnd)=\\\"add($event)\\\">\\n          </mat-chip-list>\\n          <i class=\\\"material-icons tooltip-info\\\" matTooltip=\\\"Enter subject name and press enter to add subjects\\\">\\n            info\\n          </i>\\n        </mat-form-field>\\n\\n        <!-- Date of birth -->\\n        <mat-form-field>\\n          <input matInput readonly [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of birth\\\" formControlName=\\\"dob\\\"\\n            (dateChange)=\\\"formatDate($event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n          <mat-error *ngIf=\\\"handleError('dob', 'required')\\\">\\n            Date of birth is required\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Gender -->\\n        <div class=\\\"misc-bottom-padding\\\">\\n          <mat-label>Gender:</mat-label>\\n          <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"gender\\\">\\n            <mat-radio-button value=\\\"Male\\\">Male</mat-radio-button>\\n            <mat-radio-button value=\\\"Female\\\">Female</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </div>\\n    </mat-card>\\n\\n    <!-- Submit & Reset -->\\n    <mat-card>\\n      <div class=\\\"full-wrapper button-wrapper\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button mat-flat-button color=\\\"warn\\\">Submit</button>\\n        </div>\\n      </div>\\n    </mat-card>\\n  </form>\\n</div>\\n\"","module.exports = \"<!-- Title group  -->\\n<div class=\\\"title-group\\\">\\n  <h1 class=\\\"mat-h1\\\">Add Student</h1>\\n  <mat-divider fxFlex=\\\"1 0\\\"></mat-divider>\\n</div>\\n\\n<!-- Form -->\\n<div class=\\\"inner-wrapper\\\">\\n  <form [formGroup]=\\\"studentForm\\\" (ngSubmit)=\\\"updateStudentForm()\\\" #resetStudentForm=\\\"ngForm\\\" novalidate>\\n    <!-- Left block -->\\n    <mat-card>\\n      <div class=\\\"controlers-wrapper\\\">\\n        <!-- Name -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Student name\\\" formControlName=\\\"student_name\\\">\\n          <mat-error *ngIf=\\\"handleError('student_name', 'required')\\\">\\n            You must provide a<strong>student name</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Email -->\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Student email\\\" formControlName=\\\"student_email\\\">\\n          <mat-error *ngIf=\\\"handleError('student_email', 'required')\\\">\\n            You must provide a<strong>student email</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Section -->\\n        <mat-form-field>\\n          <mat-label>Section</mat-label>\\n          <mat-select [(value)]=\\\"selected\\\" formControlName=\\\"section\\\">\\n            <mat-option [value]=\\\"sectioinArray\\\" *ngFor=\\\"let sectioinArray of SectioinArray\\\">{{sectioinArray}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"handleError('section', 'required')\\\">\\n            Section is required\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n    </mat-card>\\n\\n    <!-- Right block -->\\n    <mat-card>\\n      <div class=\\\"controlers-wrapper\\\">\\n        <!-- Add subjects -->\\n        <mat-form-field class=\\\"multiple-items\\\">\\n          <mat-chip-list #chipList>\\n            <mat-chip *ngFor=\\\"let subjectArray of subjectArray\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\"\\n              (removed)=\\\"remove(subjectArray)\\\">\\n              {{subjectArray.name}}\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n            </mat-chip>\\n            <input placeholder=\\\"Add subject\\\" [matChipInputFor]=\\\"chipList\\\"\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n              (matChipInputTokenEnd)=\\\"add($event)\\\">\\n          </mat-chip-list>\\n          <i class=\\\"material-icons tooltip-info\\\" matTooltip=\\\"Enter subject name and press enter to add subjects\\\">\\n            info\\n          </i>\\n        </mat-form-field>\\n\\n        <!-- Date of birth -->\\n        <mat-form-field>\\n          <input matInput readonly [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of birth\\\" formControlName=\\\"dob\\\"\\n            (dateChange)=\\\"formatDate($event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n          <mat-error *ngIf=\\\"handleError('dob', 'required')\\\">\\n            Date of birth is required\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <!-- Gender -->\\n        <div class=\\\"misc-bottom-padding\\\">\\n          <mat-label>Gender:</mat-label>\\n          <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"gender\\\">\\n            <mat-radio-button value=\\\"Male\\\">Male</mat-radio-button>\\n            <mat-radio-button value=\\\"Female\\\">Female</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </div>\\n    </mat-card>\\n\\n    <!-- Submit & Reset -->\\n    <mat-card>\\n      <div class=\\\"full-wrapper button-wrapper\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button mat-flat-button color=\\\"warn\\\">Update</button>\\n        </div>\\n      </div>\\n    </mat-card>\\n  </form>\\n</div>\\n\"","module.exports = \"<!-- Title group  -->\\n<div class=\\\"title-group\\\">\\n  <h1 class=\\\"mat-h1\\\">Students List</h1>\\n  <mat-divider fxFlex=\\\"1 0\\\"></mat-divider>\\n</div>\\n\\n<p *ngIf=\\\"StudentData.length <= 0\\\" class=\\\"no-data\\\">There is no student added yet!</p>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"StudentData.length > 0\\\">\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\n      <ng-container matColumnDef=\\\"_id\\\">\\n        <th mat-header-cell *matHeaderCellDef> Student ID </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"student_name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Student Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.student_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"student_email\\\">\\n        <th mat-header-cell *matHeaderCellDef> Email </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.student_email}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"section\\\">\\n        <th mat-header-cell *matHeaderCellDef> Section </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.section}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\n          <button mat-raised-button color=\\\"primary\\\" class=\\\"push-right\\\"\\n            [routerLink]=\\\"['/edit-student/', element._id]\\\">Edit</button>\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"deleteStudent(i, element)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddStudentComponent } from './components/add-student/add-student.component';\nimport { EditStudentComponent } from './components/edit-student/edit-student.component';\nimport { StudentsListComponent } from './components/students-list/students-list.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'add-student' },\n  { path: 'add-student', component: AddStudentComponent },\n  { path: 'edit-student/:id', component: EditStudentComponent },\n  { path: 'students-list', component: StudentsListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ViewChild, HostListener, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  opened = true;\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\n\n  ngOnInit() {\n    console.log(window.innerWidth)\n    if (window.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = true;\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    if (event.target.innerWidth < 768) {\n      this.sidenav.fixedTopGap = 55;\n      this.opened = false;\n    } else {\n      this.sidenav.fixedTopGap = 55\n      this.opened = true;\n    }\n  }\n\n  isBiggerScreen() {\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    if (width < 768) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n/* Angular 8 components */\nimport { AddStudentComponent } from './components/add-student/add-student.component';\nimport { EditStudentComponent } from './components/edit-student/edit-student.component';\nimport { StudentsListComponent } from './components/students-list/students-list.component';\n\n/* Angular material */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './material.module';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n/* Angular 8 http service */\nimport { HttpClientModule } from '@angular/common/http';\n\n/* Angular 8 CRUD services */\nimport { ApiService } from './shared/api.service';\n\n/* Reactive form services in Angular 8 */\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStudentComponent,\n    EditStudentComponent,\n    StudentsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\n\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLXN0dWRlbnQvYWRkLXN0dWRlbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ApiService } from '../../shared/api.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nexport interface Subject {\n  name: string;\n}\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\n\nexport class AddStudentComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  @ViewChild('chipList', { static: true }) chipList;\n  @ViewChild('resetStudentForm', { static: true }) myNgForm;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  studentForm: FormGroup;\n  subjectArray: Subject[] = [];\n  SectioinArray: any = ['A', 'B', 'C', 'D', 'E'];\n\n  ngOnInit() {\n    this.submitBookForm();\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private studentApi: ApiService\n  ) { }\n\n  /* Reactive book form */\n  submitBookForm() {\n    this.studentForm = this.fb.group({\n      student_name: ['', [Validators.required]],\n      student_email: ['', [Validators.required]],\n      section: ['', [Validators.required]],\n      subjects: [this.subjectArray],\n      dob: ['', [Validators.required]],\n      gender: ['Male']\n    })\n  }\n\n  /* Add dynamic languages */\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add language\n    if ((value || '').trim() && this.subjectArray.length < 5) {\n      this.subjectArray.push({ name: value.trim() })\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  /* Remove dynamic languages */\n  remove(subject: Subject): void {\n    const index = this.subjectArray.indexOf(subject);\n    if (index >= 0) {\n      this.subjectArray.splice(index, 1);\n    }\n  }  \n\n  /* Date */\n  formatDate(e) {\n    var convertDate = new Date(e.target.value).toISOString().substring(0, 10);\n    this.studentForm.get('dob').setValue(convertDate, {\n      onlyself: true\n    })\n  }  \n\n  /* Get errors */\n  public handleError = (controlName: string, errorName: string) => {\n    return this.studentForm.controls[controlName].hasError(errorName);\n  }  \n\n  /* Submit book */\n  submitStudentForm() {\n    if (this.studentForm.valid) {\n      this.studentApi.AddStudent(this.studentForm.value).subscribe(res => {\n        this.ngZone.run(() => this.router.navigateByUrl('/students-list'))\n      });\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1zdHVkZW50L2VkaXQtc3R1ZGVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ApiService } from '../../shared/api.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\nexport interface Subject {\n  name: string;\n}\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\n\nexport class EditStudentComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  @ViewChild('chipList', { static: true }) chipList;\n  @ViewChild('resetStudentForm', { static: true }) myNgForm;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  studentForm: FormGroup;\n  subjectArray: Subject[] = [];\n  SectioinArray: any = ['A', 'B', 'C', 'D', 'E'];\n\n  ngOnInit() {\n    this.updateBookForm();\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private actRoute: ActivatedRoute,\n    private studentApi: ApiService\n  ) { \n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.studentApi.GetStudent(id).subscribe(data => {\n      console.log(data.subjects)\n      this.subjectArray = data.subjects;\n      this.studentForm = this.fb.group({\n        student_name: [data.student_name, [Validators.required]],\n        student_email: [data.student_email, [Validators.required]],\n        section: [data.section, [Validators.required]],\n        subjects: [data.subjects],\n        dob: [data.dob, [Validators.required]],\n        gender: [data.gender]\n      })      \n    })    \n  }\n\n  /* Reactive book form */\n  updateBookForm() {\n    this.studentForm = this.fb.group({\n      student_name: ['', [Validators.required]],\n      student_email: ['', [Validators.required]],\n      section: ['', [Validators.required]],\n      subjects: [this.subjectArray],\n      dob: ['', [Validators.required]],\n      gender: ['Male']\n    })\n  }\n\n  /* Add dynamic languages */\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add language\n    if ((value || '').trim() && this.subjectArray.length < 5) {\n      this.subjectArray.push({ name: value.trim() })\n    }\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  /* Remove dynamic languages */\n  remove(subject: Subject): void {\n    const index = this.subjectArray.indexOf(subject);\n    if (index >= 0) {\n      this.subjectArray.splice(index, 1);\n    }\n  }\n\n  /* Date */\n  formatDate(e) {\n    var convertDate = new Date(e.target.value).toISOString().substring(0, 10);\n    this.studentForm.get('dob').setValue(convertDate, {\n      onlyself: true\n    })\n  }\n\n  /* Get errors */\n  public handleError = (controlName: string, errorName: string) => {\n    return this.studentForm.controls[controlName].hasError(errorName);\n  }\n\n  /* Update book */\n  updateStudentForm() {\n    console.log(this.studentForm.value)\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    if (window.confirm('Are you sure you want to update?')) {\n      this.studentApi.UpdateStudent(id, this.studentForm.value).subscribe( res => {\n        this.ngZone.run(() => this.router.navigateByUrl('/students-list'))\n      });\n    }\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3R1ZGVudHMtbGlzdC9zdHVkZW50cy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Student } from '../../shared/student';\nimport { ApiService } from '../../shared/api.service';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-students-list',\n  templateUrl: './students-list.component.html',\n  styleUrls: ['./students-list.component.css']\n})\n\nexport class StudentsListComponent implements OnInit {\n  StudentData: any = [];\n  dataSource: MatTableDataSource<Student>;\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  displayedColumns: string[] = ['_id', 'student_name', 'student_email', 'section', 'action'];\n\n  constructor(private studentApi: ApiService) {\n    this.studentApi.GetStudents().subscribe(data => {\n      this.StudentData = data;\n      this.dataSource = new MatTableDataSource<Student>(this.StudentData);\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator;\n      }, 0);\n    })    \n  }\n\n  ngOnInit() { }\n\n  deleteStudent(index: number, e){\n    if(window.confirm('Are you sure')) {\n      const data = this.dataSource.data;\n      data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\n      this.dataSource.data = data;\n      this.studentApi.DeleteStudent(e._id).subscribe()\n    }\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { Injectable } from '@angular/core';\nimport { Student } from './student';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  endpoint: string = 'http://localhost:8000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // Add student\n  AddStudent(data: Student): Observable<any> {\n    let API_URL = `${this.endpoint}/add-student`;\n    return this.http.post(API_URL, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Get all students\n  GetStudents() {\n    return this.http.get(`${this.endpoint}`);\n  }\n\n  // Get student\n  GetStudent(id): Observable<any> {\n    let API_URL = `${this.endpoint}/read-student/${id}`;\n    return this.http.get(API_URL, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Update student\n  UpdateStudent(id, data): Observable<any> {\n    let API_URL = `${this.endpoint}/update-student/${id}`;\n    return this.http.put(API_URL, data, { headers: this.headers })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Delete student\n  DeleteStudent(id): Observable<any> {\n    var API_URL = `${this.endpoint}/delete-student/${id}`;\n    return this.http.delete(API_URL)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Error handling \n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}